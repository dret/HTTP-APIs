<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="videos.xslt"?>
<videos>
    <video published="2022-01-24" slug="RFC-8594-The-Sunset-HTTP-Header-Field">
        <title>The Sunset HTTP Header Field</title>
        <resource title='RFC 8594, "The Sunset HTTP Header Field", May 2019' href="https://datatracker.ietf.org/doc/html/rfc8594"/>
        <tagline>Resources and APIs disappear at some point in time; the Sunset field allows to advertise that event to clients.</tagline>
        <link type="youtube" id="twfufQn1mD0"/>
        <description>When a resource or an API is about to be retired, it would be useful for consumers of that resource/API to be notified in advance. By using an HTTP field, this information can be conveyed in-band, instead of having to rely on out-of-band channels such as announcements that are published on Web pages or sent by email.</description>
        <additional>
            <resource title='"API Lifecycle Management: Deprecation and Sunsetting", YouTube, November 2020' href="https://www.youtube.com/watch?v=twfufQn1mD0"/>
        </additional>
    </video>
    <video published="2022-02-04" slug="RFC-7807-Problem-Details-for-HTTP-APIs">
        <title>Problem Details for HTTP APIs</title>
        <resource title='RFC 7807, "Problem Details for HTTP APIs", March 2016' href="https://datatracker.ietf.org/doc/html/rfc7807"/>
        <tagline>Reporting problem information beyond the HTTP status code is useful in many API designs.</tagline>
        <link type="youtube" id="UNdUjBqsUqg"/>
        <description>HTTP has no standard way of communication problem reports or error messages other than the HTTP status code. Many APIs would like to include additional information in their problem reports or error messages so that clients have a better way of understanding what kind of problem or error occurred. By using a specific media type for communicating these conditions, API designers can use an existing format and API consumers can depend on a format that they know.</description>
        <additional>
            <resource title='"Representing Problem Details in HTTP APIs: An Introduction to RFC 7807", YouTube, June 2021' href="https://www.youtube.com/watch?v=UNdUjBqsUqg"/>
        </additional>
    </video>
    <video published="2022-02-05" slug="RFC-8288-Web-Linking">
        <title>Web Linking</title>
        <resource title='RFC 8288, "Web Linking", October 2017' href="https://datatracker.ietf.org/doc/html/rfc8288"/>
        <tagline>Supporting the representation of typed links in HTTP.</tagline>
        <link type="youtube" id="TpVsg2Nz_38"/>
        <description>Many APIs take advantage of links as an important way to relate resources and to guide interactions with the API. For links to be meaningful they must have a type associated with them, so that clients can understand what links represent, and can choose which links to follow. Web linking introduces the idea of a general mechanism for link types, establishes a registry of types so that types can be reused, and it also defines a way how links can be represented in an HTTP field.</description>
        <additional>
            <resource title='"Handling Errors on the Web: SchrÃ¶dinger&apos;s Links and how to handle them", YouTube, May 2021' href="https://www.youtube.com/watch?v=TpVsg2Nz_38"/>
        </additional>
    </video>
</videos>